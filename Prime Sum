vector<int> Solution::primesum(int n) {
    vector<int> ans;

     // Generating primes using Sieve 
    vector<bool> isPrime(n + 1, true); 
    isPrime[0] = false;
    isPrime[1] = false; 
    for (int i=2; i<=n; i++) 
        isPrime[i] = true; 
  
    for (int p=2; p*p<=n; p++) 
    { 
        // If isPrime[p] is not changed, then it is 
        // a prime 
        if (isPrime[p] == true) 
        { 
            // Update all multiples of p 
            for (int i=p*p; i<=n; i += p) 
                isPrime[i] = false; 
        } 
    } 
  
    // Traversing all numbers to find first 
    // pair 
    for (int i=0; i<n; i++) 
    { 
        if (isPrime[i] && isPrime[n-i]) 
        { 
            ans.push_back(i);
            ans.push_back((n-i));
            return ans; 
        } 
    } 
}
